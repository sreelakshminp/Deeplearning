# -*- coding: utf-8 -*-
"""experiment5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15VIK-DD-2c6rqu3tijN-4g55WgFujMDn
"""

import tensorflow as tf
from tensorflow.keras.datasets import mnist
from tensorflow.keras.utils import to_categorical

(train_images, train_labels), (test_images, test_labels) = mnist.load_data()

train_images = train_images / 255.0

test_images = test_images / 255.0

train_labels = to_categorical(train_labels)

test_labels =to_categorical(test_labels)

model = tf.keras.Sequential([
 tf.keras.layers.Conv2D(32, 3, activation='relu', input_shape=(28, 28, 1)),
 tf.keras.layers.MaxPooling2D(),
 tf.keras.layers.Conv2D(64, 3, activation='relu'),
 tf.keras.layers.MaxPooling2D(),
 tf.keras.layers.Conv2D(64, 3, activation='relu'),
 tf.keras.layers.Flatten(),
 tf.keras.layers.Dense(64, activation='relu'),
 tf.keras.layers.Dense(10, activation='softmax')
])

model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])
model.fit(train_images, train_labels, epochs=5, batch_size=64, validation_split=0.2)

test_loss, test_acc = model.evaluate(test_images, test_labels)
print(f"\nTest Accuracy : {round(test_acc * 100, 4)}%")

import matplotlib.pyplot as plt
import numpy as np

num_samples = 8
indices = np.random.choice(len(test_images), num_samples, replace=False)

sample_images = test_images[indices]
sample_labels = test_labels[indices]

sample_images_reshaped = sample_images.reshape(-1, 28, 28, 1)

predictions = model.predict(sample_images_reshaped)
predicted_labels = np.argmax(predictions, axis=1)
true_labels = np.argmax(sample_labels, axis=1)

plt.figure(figsize=(15, 4))
for i in range(num_samples):
    plt.subplot(1, num_samples, i + 1)
    plt.imshow(sample_images[i], cmap='gray')
    plt.axis('off')
    plt.title(f"Pred: {predicted_labels[i]}\nTrue: {true_labels[i]}", fontsize=24)
plt.tight_layout()
plt.show()







