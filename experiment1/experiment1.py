# -*- coding: utf-8 -*-
"""experiment1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bYx98010E4Z4iGhdiem8yVovuwQeJMDe

Q1.Create a vector, scalar, matrix and tensor with values of your choice using tf.constant().
"""

import tensorflow as tf
scalar = tf.constant(5)
print(scalar)
vector = tf.constant([1, 2, 3])
print(vector)
matrix = tf.constant([[1, 2], [3, 4]])
print(matrix)
tensor = tf.constant([[[1, 2], [3, 4]], [[5, 6], [7, 8]]])
print(tensor)

"""Q2.Find the shape, rank and size of the tensors (which you created for Q1)."""

# Scalar
print("Scalar:")
print(f"  Value: {scalar.numpy()}")
print(f"  Shape: {scalar.shape}")
print(f"  Rank: {tf.rank(scalar).numpy()}")
print(f"  Size: {tf.size(scalar).numpy()}")

# Vector
print("\nVector:")
print(f"  Value: {vector.numpy()}")
print(f"  Shape: {vector.shape}")
print(f"  Rank: {tf.rank(vector).numpy()}")
print(f"  Size: {tf.size(vector).numpy()}")

# Matrix
print("\nMatrix:")
print(f"  Value: {matrix.numpy()}")
print(f"  Shape: {matrix.shape}")
print(f"  Rank: {tf.rank(matrix).numpy()}")
print(f"  Size: {tf.size(matrix).numpy()}")

# Tensor
print("\nTensor:")
print(f"  Value: {tensor.numpy()}")
print(f"  Shape: {tensor.shape}")
print(f"  Rank: {tf.rank(tensor).numpy()}")
print(f"  Size: {tf.size(tensor).numpy()}")

"""Q3.Create two tensors containing random values between 0 and 1 with
shape [5, 300].
"""

tensor_a = tf.random.uniform(shape=(5, 300), minval=0, maxval=1, dtype=tf.float32)
tensor_b = tf.random.uniform(shape=(5, 300), minval=0, maxval=1, dtype=tf.float32)

print("Tensor A shape:", tensor_a.shape)
print("Tensor B shape:", tensor_b.shape)

"""Q4.Multiply the two tensors (which you created for Question 3) using matrix
multiplication.


"""

matmul_result = tf.matmul(tensor_a, tensor_b, transpose_b=True)
print("\nMatrix multiplication result shape:", matmul_result.shape)

"""Q5.Multiply the two tensors (which you created for Question 3) using dot product.

"""

dot_product = tf.reduce_sum(tensor_a * tensor_b, axis=1)  # sum along inner dim (300)
print("\nDot product result shape:", dot_product.shape)

"""Q6.Create a tensor with random values between 0 and 1 with shape [224, 224,3].


"""

image_tensor = tf.random.uniform(shape=[224, 224, 3], minval=0, maxval=1, dtype=tf.float32)
print("\nImage tensor shape:", image_tensor.shape)

""" Q7.Find the min and max values of the tensor (which you created for Question 6)

"""

min_val = tf.reduce_min(image_tensor)
max_val = tf.reduce_max(image_tensor)
print("Minimum value in the image tensor:", min_val.numpy())
print("Maximum value in the image tensor:", max_val.numpy())

"""

Q8.Created a tensor with random values of shape [1, 224, 224, 3] then squeeze it to change the shape to [224, 224, 3].

"""

batch_tensor = tf.random.uniform(shape=[1, 224, 224, 3], minval=0, maxval=1, dtype=tf.float32)
print("Original shape:", batch_tensor.shape)
squeezed_tensor = tf.squeeze(batch_tensor)
print("Squeezed shape:", squeezed_tensor.shape)

"""Q9.Create a tensor with shape [10] using your own choice of values, then find the index which has the maximum value.




"""

tensor = tf.constant([3, 17, 5, 9, 12, 7, 20, 4, 8, 1])
print("Tensor:", tensor.numpy())
max_index = tf.argmax(tensor).numpy()
print("Index of maximum value:", max_index)
print("Maximum value:", tensor[max_index].numpy())

"""Q10.One-hot encode the tensor you created in 9.


"""

tensor = tf.constant([3, 17, 5, 9, 12, 7, 20, 4, 8, 1])
depth = tf.reduce_max(tensor).numpy() + 1
one_hot_encoded = tf.one_hot(tensor, depth=depth)

print("One-hot encoded shape:", one_hot_encoded.shape)
print("One-hot encoded tensor:\n", one_hot_encoded.numpy())