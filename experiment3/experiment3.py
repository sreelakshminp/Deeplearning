# -*- coding: utf-8 -*-
"""experiment3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rL4I7sGH5rsd87xflw6dfIjvYn5Gh87g
"""

import tensorflow as tf
from tensorflow.keras import layers, models
from tensorflow.keras.layers import Dense, Flatten
from tensorflow.keras.datasets import cifar10
from tensorflow.keras.utils import to_categorical
from tensorflow.keras.models import Sequential

(x_train, y_train), (x_test, y_test) = cifar10.load_data()

x_train = x_train / 255.0
x_test = x_test / 255.0

y_train = to_categorical(y_train)
y_test = to_categorical(y_test)

model = Sequential([
    Flatten(input_shape= (32,32,3)),
    Dense(128,activation = 'relu'),
    Dense(68 ,activation = 'relu'),
    Dense(10,activation = 'softmax')

])

model.summary()

model.compile(optimizer = 'adam',
              loss = 'categorical_crossentropy',
              metrics = ['accuracy'])

history = model.fit(x_train,y_train,epochs=10,batch_size=32,validation_split=0.2)
test_loss,test_acc = model.evaluate(x_test,y_test)
print(f"/n Test Accuracy{test_acc}")

import matplotlib.pyplot as plt
plt.figure(figsize=(10, 4))
plt.subplot(1, 2, 1)
plt.plot(history.history['loss'], label='Train Loss')
plt.plot(history.history['val_loss'], label='Val Loss')
plt.title('Loss')
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.legend()
plt.subplot(1, 2, 2)
plt.plot(history.history['accuracy'],label='train accuarcy')
plt.plot(history.history['val_accuracy'],label='Val accuracy')
plt.title('accuracy')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.legend()
plt.tight_layout()
plt.show()





